on: push
name: deploy
jobs:
  build-and-push:
    name: build and push image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: build and push to docker
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ github.repository }}
        tag_with_ref: true
        tag_with_sha: true
        tags: ${{ github.sha }}
  deploy-to-cluster:
    name: deploy to cluster
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: deploy to cluster
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: kustomize edit set image prueba-gha=${{ github.repository }}:${{ github.sha }} && kubectl kustomize build . | kubectl apply -f -
    - name: verify deployment
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        KUBECTL_VERSION: "1.20"
      with:
        args: '"-n prueba rollout status deployment/prueba"'
  ngrok-watcher:
    name: Ngrok watcher
    runs-on: ubuntu-latest
    needs: deploy-to-cluster
    steps:
    - name: Get ngrok URL
      id: getNgrokUrl
      uses: debianmaster/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        KUBECTL_VERSION: "1.20"
      with:
        args: |
          URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`

          while [[ $URL != *"ngrok"* ]]; do
            echo "Still not ready" && sleep 5
          done

          echo "::set-output name=url::$URL"
    - uses: actions/checkout@master
    - name: Add Ngrok URL comment to PR
      uses: harupy/comment-on-pr@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        URL: ${{ steps.getNgrokUrl.outputs.url }}
      with:
        filename: comment-template.md
